services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./back:/app
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=${DB_HOST:-db}  # Default to service name
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-appdb}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost}
      - API_PREFIX=${API_PREFIX:-/api}
      - API_HOST=${API_HOST:-localhost}
    # Keep env_file for local development
    env_file:
      - .env
    restart: unless-stopped

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_HOST_PORT:-80}:${FRONTEND_PORT:-3000}"
    depends_on:
      - backend
    environment:
      - API_HOST=${API_HOST:-localhost}
      - API_PORT=${API_PORT:-8000}
      - FRONTEND_PORT=${FRONTEND_PORT:-3000}
    env_file:
      - .env

  db:
    image: ankane/pgvector:latest
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - ./db/pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-appdb}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}
       -d ${DB_NAME:-appdb}"]
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
      - .env
